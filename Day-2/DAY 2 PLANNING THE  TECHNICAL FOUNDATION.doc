Link: https://docs.google.com/document/d/1YQk1hz7UC3vM9ACjGhapJqpRrTfugGzA_G_75EgOxmI/edit?usp=sharing


Day-2 Marketplace Technical Foundation - General eCommaerce:

1. System Architecture Overview:

Diagram:

[Frontend (Next.js)]
       |
   [Sanity CMS]
       |
   [Product Data API] --> [Third-Party APIs]
       |                       |
[Shipment Tracking API]   [Payment Gateway]


Component Descriptions:

Frontend (Next.js):
The primary interface where customers search for products, manage their cart, and make orders.
Communicates with Sanity CMS and APIs to retrieve dynamic data and render it in real-time.

Sanity CMS:
A headless CMS that deals with product data, inventory, and order records.
Serves as the backend database for the marketplace.

Product Data API:
Connects the frontend to Sanity CMS to retrieve and update product information.
Example endpoint: /products to get all products.

Third-Party APIs:

Shipment Tracking API: 
Tracks orders in real-time for customers.
Payment Gateway: Processes secure payments through ShipEngine for seamless integration.

2. Major Workflows:

Workflow:

User Adds Products to Cart

Step 1: User selects a product on the frontend.
Step 2: Frontend sends a request to the Product Data API to retrieve product details.
Step 3: Product is added to the cart of the user and the cart data is updated in Sanity CMS.
Step 4: User checks out where data is validated through APIs.

Workflow:

User Places an Order

Step 1: User confirms the items in the cart on the checkout page.
Step 2: Frontend interacts with the Payment Gateway for payment processing.
Step 3: Once payment is successful, order details are sent to the Shipment Tracking API.
Step 4: Order status is updated in the CMS and real-time tracking is given to the user.

3. Category-Specific Instructions:

General eCommerce:

Product Browsing Workflow:

Endpoint: /products
Description: Fetch all the product listings from Sanity CMS.

Cart Management Workflow:

Endpoint: /cart
Description: Update, delete or fetch items in the cart.

Order Placement Workflow:

Endpoint: /order
Description: Place a new order and get order details.

4. API Endpoints:


     EndPoiont      Method              Purpose                           Respnse Example
     /products       GET      Fetch all product details           {“id”:1,”name”:”product”,”price”:100}
     /cart           POST      Add a product to the cart           {cartId”:123,”status”:”siccess”}
     /order          POST           Place a new order             {“orderid”:456,”status”:”comfirmed”}
     /track-order    GET     Fetch shipment tracking details       {“orderid”:456,”status”:”tramsit”}



5. Sanity Schem:
import { defineType } from "sanity"


export const product = defineType({
    name: "product",
    title: "Product",
    type: "document",
    fields: [
        {
            name: "title",
            title: "Title",
            validation: (rule) => rule.required(),
            type: "string"
        },
        {
            name:"description",
            type:"text",
            validation: (rule) => rule.required(),
            title:"Description",
        },
        {
            name: "productImage",
            type: "image",
            validation: (rule) => rule.required(),
            title: "Product Image"
        },
        {
            name: "price",
            type: "number",
            validation: (rule) => rule.required(),
            title: "Price",
        },
        {
            name: "tags",
            type: "array",
            title: "Tags",
            of: [{ type: "string" }]
        },
        {
            name:"dicountPercentage",
            type:"number",
            title:"Discount Percentage",
        },
        {
            name:"isNew",
            type:"boolean",
            title:"New Badge",
        }
    ]
})


